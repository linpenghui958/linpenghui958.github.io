(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{308:function(t,s,e){"use strict";e.r(s);var n=e(309),i=e.n(n);for(var o in n)["default"].indexOf(o)<0&&function(t){e.d(s,t,(function(){return n[t]}))}(o);s.default=i.a},309:function(t,s){window.onload=function(){window.viewportUnitsBuggyfill.init({hacks:window.viewportUnitsBuggyfillHacks})}},390:function(t,s,e){"use strict";e.d(s,"a",(function(){return n})),e.d(s,"b",(function(){return i}));var n=function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h3",{attrs:{id:"vue-ts-下的vw适配-第三方库css问题"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vue-ts-下的vw适配-第三方库css问题"}},[t._v("#")]),t._v(" Vue + ts 下的vw适配（第三方库css问题）")]),t._v(" "),e("hr"),t._v(" "),e("p",[t._v("之前看了大漠老师的VW适配方案，觉得受益匪浅，对比flexible的方案，与js解耦，纯css的适配方案，关于VW的介绍里面有详细的"),e("a",{attrs:{href:"https://www.w3cplus.com/mobile/vw-layout-in-vue.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("介绍"),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("项目基于vue-cli")]),t._v(" "),e("p",[t._v("首先安装所需的插件\n"),e("code",[t._v("npm i postcss-aspect-ratio-mini postcss-px-to-viewport postcss-write-svg postcss-cssnext postcss-viewport-units cssnano --S")])]),t._v(" "),e("p",[t._v("接下来在根目录的.postcssrc.js对PostCSS插件进行配置")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v('module.exports = {\n  "plugins": {\n    "postcss-import": {},\n    "postcss-url": {},\n    // to edit target browsers: use "browserslist" field in package.json\n    "postcss-write-svg": {\n      uft8: false\n    },\n    "postcss-cssnext": {},\n    "postcss-px-to-viewport": {\n      viewportWidth: 750, // 设计稿宽度\n      viewportHeight: 1334, // 设计稿高度，可以不指定\n      unitPrecision: 3, // px to vw无法整除时，保留几位小数\n      viewportUnit: \'vw\', // 转换成vw单位\n      selectorBlackList: [\'.ignore\', \'.hairlines\'], // 不转换的类名\n      minPixelValue: 1, // 小于1px不转换\n      mediaQuery: false // 允许媒体查询中转换\n    },\n    "postcss-viewport-units": {},\n    "cssnano": {\n      preset: "advanced",\n      autoprefixer: false, // 和cssnext同样具有autoprefixer，保留一个\n      "postcss-zindex": false\n    }\n  }\n}\n')])])]),e("p",[t._v("#####.postcss-px-to-viewport\n用来把px单位转换为vw、vh、vmin或者vmax这样的视窗单位，也是vw适配方案的核心插件之一。\n我们都是使用"),e("strong",[t._v("750px宽度的视觉设计稿")]),t._v("，那么100vw = 750px，即1vw = 7.5px。那么我们可以根据设计图上的px值直接转换成对应的vw值。在实际撸码过程，不需要进行任何的计算，"),e("strong",[t._v("直接在代码中写px")]),t._v("。")]),t._v(" "),e("p",[t._v("#####.postcss-aspect-ratio-mini\n用来处理元素容器宽高比。")]),t._v(" "),e("p",[t._v("#####.postcss-write-svg\n用来处理移动端1px的解决方案。")]),t._v(" "),e("p",[t._v("#####vw兼容方案\nViewport Units Buggyfill")]),t._v(" "),e("ol",[e("li",[e("p",[t._v("引入js文件\n"),e("code",[t._v('<script src="//g.alicdn.com/fdilab/lib3rd/viewport-units-buggyfill/0.6.2/??viewport-units-buggyfill.hacks.min.js,viewport-units-buggyfill.min.js"><\/script>')])])]),t._v(" "),e("li",[e("p",[t._v("在HTML文件中调用viewport-units-buggyfill")])])]),t._v(" "),e("p",[t._v("ps: 使用vw的polyfill解决方案会在用到的vw的地方添加content，会影响到img和伪元素，需要全局添加")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v("`img { content: normal !important; }\n")])])]),e("p",[e("img",{attrs:{src:"https://i.imgur.com/uHZTO3l.png",alt:""}})]),t._v(" "),e("p",[t._v("小结\n这里作者用的是vue + ts环境，在引入第三方库mint-ui的时候，遇到了一些问题")]),t._v(" "),e("ol",[e("li",[e("p",[t._v("第三方库引入css问题\n在main.ts文件中直接引入mint-ui的css文件会找不到文件")]),t._v(" "),e("p",[t._v("import Vue from 'vue'\nimport MintUI from 'mint-ui'\nimport 'mint-ui/lib/style.css' // 提示找不到文件\nimport App from './App.vue'")]),t._v(" "),e("p",[t._v("Vue.use(MintUI)")]),t._v(" "),e("p",[t._v("new Vue({\nel: '#app',\ncomponents: { App }\n})")])])]),t._v(" "),e("p",[e("img",{attrs:{src:"https://i.imgur.com/VEoTX0b.png",alt:""}})]),t._v(" "),e("p",[t._v("笔者在这里的了解一下在github上其他人开源的vue + ts的项目，发现部分解决方案是新建一个style文件，引入node_module内所需的所有文件")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v("import Vue from 'vue'\nimport MintUI from 'mint-ui'\nimport '@/styles/mint-ui.styl'\nimport App from './App.vue'\n\nVue.use(MintUI)\n\nnew Vue({\n  el: '#app',\n  components: { App }\n})\n")])])]),e("p",[t._v("mint-ui.styl中")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v("@import '../../node_modules/mint-ui/lib/style.css'\n")])])]),e("p",[t._v("在这之前好像跟我们是vw适配没什么联系")]),t._v(" "),e("p",[t._v("紧接的就是第二个问题了")]),t._v(" "),e("ol",{attrs:{start:"2"}},[e("li",[t._v("vw打包后，改变了第三方库的px也被转换成vw了")])]),t._v(" "),e("p",[t._v("这里mint-ui使用的px为单位，所以run dev的时候看到的是正常的，但是build后，postcss-px-to-viewport会将引入的style转换成vw单位")]),t._v(" "),e("p",[t._v("这里以mint-ui的picker为例\ndev环境时\n"),e("img",{attrs:{src:"https://i.imgur.com/ICd7x4k.png",alt:""}}),t._v(" "),e("img",{attrs:{src:"https://i.imgur.com/lUf5C6E.png",alt:""}})]),t._v(" "),e("p",[t._v("build后再打开\n"),e("img",{attrs:{src:"https://i.imgur.com/AkOSctC.png",alt:""}}),t._v(" "),e("img",{attrs:{src:"https://i.imgur.com/gUTmNHh.png",alt:""}})]),t._v(" "),e("p",[t._v("这里在网上查了一下，感觉关于vw的适配方案的文章并不多，没找到类似的解决方案\n后来找到了一个改良版的postcss-px-to-viewport\n添加了exclude选项，将node_modules目录排除掉，即不会受影响\n非常开心的放到了github上 "),e("a",{attrs:{href:"https://github.com/linpenghui958/postcss-px-to-viewport",target:"_blank",rel:"noopener noreferrer"}},[t._v("postcss-px-to-viewport"),e("OutboundLink")],1),t._v("，用vw的同学，有需要的可以看一下")]),t._v(" "),e("p",[t._v("也可以自己在node_modules中找到postcss-px-to-viewport，打开index.js\n新增对exclude选项的处理")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v("module.exports = postcss.plugin('postcss-px-to-viewport', function (options) {\n\n  var opts = objectAssign({}, defaults, options);\n  var pxReplace = createPxReplace(opts.viewportWidth, opts.minPixelValue, opts.unitPrecision, opts.viewportUnit);\n\n  return function (css) {\n\ncss.walkDecls(function (decl, i) {\n  if (options.exclude) { // 添加对exclude选项的处理\n    if (Object.prototype.toString.call(options.exclude) !== '[object RegExp]') {\n      throw new Error('options.exclude should be RegExp!')\n    }\n    if (decl.source.input.file.match(options.exclude) !== null) return;\n  }\n  // This should be the fastest test and will remove most declarations\n  if (decl.value.indexOf('px') === -1) return;\n\n  if (blacklistedSelector(opts.selectorBlackList, decl.parent.selector)) return;\n\n  decl.value = decl.value.replace(pxRegex, pxReplace);\n});\n\nif (opts.mediaQuery) {\n  css.walkAtRules('media', function (rule) {\n    if (rule.params.indexOf('px') === -1) return;\n    rule.params = rule.params.replace(pxRegex, pxReplace);\n  });\n}\n\n  };\n});\n")])])]),e("p",[t._v("然后在.postcssrc.js添加postcss-px-to-viewport的exclude选项，亲测可用")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v("\"postcss-px-to-viewport\": {\n  viewportWidth: 750,\n  viewportHeight: 1334,\n  unitPrecision: 3,\n  viewportUnit: 'vw',\n  selectorBlackList: ['.ignore', '.hairlines'],\n  minPixelValue: 1,\n  mediaQuery: false,\n  exclude: /(\\/|\\\\)(node_modules)(\\/|\\\\)/\n},\n")])])]),e("p",[t._v("当然也可以直接 "),e("code",[t._v("npm install postcss-px-to-viewport-opt -S")])])])},i=[]},391:function(t,s,e){"use strict";e.r(s);var n=e(390),i=e(308);for(var o in i)["default"].indexOf(o)<0&&function(t){e.d(s,t,(function(){return i[t]}))}(o);var p=e(45),r=Object(p.a)(i.default,n.a,n.b,!1,null,null,null);s.default=r.exports}}]);