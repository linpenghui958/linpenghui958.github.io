(window.webpackJsonp=window.webpackJsonp||[]).push([[3],{362:function(t,e,v){t.exports=v.p+"assets/img/3CB87568-7C57-4848-98E5-46E5CE62C2F8.515e1a48.png"},363:function(t,e,v){t.exports=v.p+"assets/img/F0B8566F-6D80-4B7A-939E-EC030527187C.95652324.jpg"},364:function(t,e,v){t.exports=v.p+"assets/img/4274FBD2-1264-4B07-AFAE-F3125A1D3565.8f415365.png"},365:function(t,e,v){t.exports=v.p+"assets/img/AB694FB0-F007-48B0-A286-562E8B8FCBA2.9cf97910.jpg"},366:function(t,e,v){t.exports=v.p+"assets/img/95058CE5-F44C-4839-89CD-CE1E85D3C619.6bb40838.jpg"},367:function(t,e,v){t.exports=v.p+"assets/img/CE226313-D816-45CF-B457-994B66283A44.d437b410.png"},368:function(t,e,v){t.exports=v.p+"assets/img/219ADF42-E06A-4EA5-BDC0-AE5A73CD369A.95cb258c.png"},369:function(t,e,v){t.exports=v.p+"assets/img/E5C248B6-4945-44BC-A709-1DD82D49FAAF.1e0eb167.png"},370:function(t,e,v){t.exports=v.p+"assets/img/7914A8AF-5CC3-47B2-A2EF-CFFBC015A330.cb132d9b.png"},371:function(t,e,v){t.exports=v.p+"assets/img/F4BD2112-146E-4E74-B9B5-FCADFD3E2984.2baa7bfa.png"},372:function(t,e,v){t.exports=v.p+"assets/img/44444.a9c10f30.gif"},373:function(t,e,v){t.exports=v.p+"assets/img/392CF20F-2606-4966-92DE-6ECFC4065E2E.546bb5f4.png"},374:function(t,e,v){t.exports=v.p+"assets/img/66666.6d7bdfb0.gif"},375:function(t,e,v){t.exports=v.p+"assets/img/77777.7196eddd.gif"},376:function(t,e,v){t.exports=v.p+"assets/img/11111.b58b39e7.gif"},377:function(t,e,v){t.exports=v.p+"assets/img/22222.0092e3c3.gif"},378:function(t,e,v){t.exports=v.p+"assets/img/55555.9a3eeac1.gif"},379:function(t,e,v){t.exports=v.p+"assets/img/33333.fbca8196.gif"},380:function(t,e,v){t.exports=v.p+"assets/img/F8F6500C-A72B-4752-9D10-B2931CB36CF8.3d3fc0f5.gif"},381:function(t,e,v){t.exports=v.p+"assets/img/6F8E5930-4F87-4BBE-8F63-DA832C77E882.c517767e.jpg"},382:function(t,e,v){t.exports=v.p+"assets/img/91DB3A31-5812-478F-9133-14D67CA44BC3.207d8def.jpg"},383:function(t,e,v){t.exports=v.p+"assets/img/1598105373710.0514cd96.jpg"},399:function(t,e,v){"use strict";v.r(e);var a=v(45),r=Object(a.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h4",{attrs:{id:"flutter介绍"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#flutter介绍"}},[t._v("#")]),t._v(" Flutter介绍")]),t._v(" "),a("hr"),t._v(" "),a("blockquote",[a("p",[t._v("Flutter 框架是当下非常热门的跨端解决方案，能够帮助开发者通过一套代码库高效构建多平台精美应用，支持移动、Web、桌面等多端开发。但仍然有很多产品、设计、甚至开发同学并不了解 Flutter，所以本文将深入浅出和大家聊聊 Flutter 的设计背景、技术特点，以及与其他同类技术之间的对比，希望与大家一同交流。")])]),t._v(" "),a("h4",{attrs:{id:"跨平台背景"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#跨平台背景"}},[t._v("#")]),t._v(" 跨平台背景")]),t._v(" "),a("p",[a("strong",[t._v("移动互联网的重要性")])]),t._v(" "),a("p",[a("img",{attrs:{src:v(362),alt:""}})]),t._v(" "),a("ul",[a("li",[t._v("与2019年1月相比，全球使用互联网的人数已增加到45.4亿，增长了7％（2.98亿新用户）。")]),t._v(" "),a("li",[t._v("到2020年1月，全球有38亿 社交媒体 用户，与去年同期相比，这个数字增长了9％以上（3.21亿新用户）。")]),t._v(" "),a("li",[t._v("在全球范围内，现在有超过51.9亿人使用手机，在过去的一年中，用户数量增加了1.24亿（2.4％）。")])]),t._v(" "),a("p",[t._v("现在，普通的互联网用户每天在线花费6个小时43分钟。这比去年同期减少了3分钟，但仍然相当于每个互联网用户每年连接时间超过100天。如果我们每天允许大约8个小时的睡眠，那意味着我们目前的醒来时间中，有40％以上是通过互联网度过的。")]),t._v(" "),a("p",[a("img",{attrs:{src:v(363),alt:""}})]),t._v(" "),a("p",[t._v("在移动互联网的浪潮下，开发效率和使用体验可以说是同等重要。但是，使用原生的方式来开发 App，就要求我们必须针对 "),a("strong",[t._v("iOS")]),t._v(" 和 "),a("strong",[t._v("Android")]),t._v(" 这两个平台分别开发。\n因为这样的话，我们不仅需要在不同的项目间尝试用不同的语言去实现同样的功能，还要承担由此带来的维护任务。如果还要继续向其他平台（比如 Web、Mac 或 Windows）拓展的话，我们需要"),a("strong",[t._v("付出的成本和时间将成倍增长")]),t._v("。而这，显然是难以接受的。于是，跨平台开发的概念顺势走进了我们的视野。\n所以从本质上讲，"),a("code",[t._v("跨平台开发是为了增加业务代码的复用率，减少因为要适配多个平台带来的工作量，从而降低开发成本")]),t._v("。")]),t._v(" "),a("h4",{attrs:{id:"跨平台开发方案的三个时代"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#跨平台开发方案的三个时代"}},[t._v("#")]),t._v(" 跨平台开发方案的三个时代")]),t._v(" "),a("p",[t._v("根据实现方式的不同，业内常见的观点是将主流的跨平台方案划分为三个时代。")]),t._v(" "),a("ul",[a("li",[t._v("Web 容器时代：基于 Web 相关技术通过浏览器组件来实现界面及功能，典型的框架包括 Cordova(PhoneGap)、Ionic 和微信小程序。")]),t._v(" "),a("li",[t._v("泛 Web 容器时代：采用类 Web 标准进行开发，但在运行时把绘制和渲染交由原生系统接管的技术，代表框架有 React Native、Weex 和快应用，广义的还包括天猫的 Virtual View 等。")]),t._v(" "),a("li",[t._v("自绘引擎时代：自带渲染引擎，客户端仅提供一块画布即可获得从业务逻辑到功能呈现的多端高度一致的渲染体验。Flutter，是为数不多的代表。")])]),t._v(" "),a("h5",{attrs:{id:"web容器时代"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#web容器时代"}},[t._v("#")]),t._v(" web容器时代")]),t._v(" "),a("p",[a("img",{attrs:{src:v(364),alt:""}})]),t._v(" "),a("blockquote",[a("p",[t._v("Web 时代的方案，主要采用的是原生应用内嵌浏览器控件 WebView的方式进行 HTML5 页面渲染。\n由于采用了 Web 开发技术，社区和资源非常丰富，开发效率也很高。")])]),t._v(" "),a("p",[t._v("但，"),a("strong",[t._v("一个完整 HTML5 页面的展示要经历浏览器控件的加载、解析和渲染三大过程，性能消耗要比原生开发增加 N 个数量级")]),t._v("。")]),t._v(" "),a("h5",{attrs:{id:"泛-web-容器时代"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#泛-web-容器时代"}},[t._v("#")]),t._v(" 泛 Web 容器时代")]),t._v(" "),a("p",[a("img",{attrs:{src:v(365),alt:""}})]),t._v(" "),a("blockquote",[a("p",[t._v("泛 Web 容器时代的解决方案优化了 Web 容器时代的加载、解析和渲染这三大过程，把影响它们独立运行的 Web 标准进行了裁剪，以相对简单的方式支持了构建移动端页面必要的 Web 标准（如 Flexbox 等），也保证了便捷的前端开发体验；同时，采用原生自带的 UI 组件实现代替了核心的渲染引擎，仅保持必要的基本控件渲染能力，从而使得渲染过程更加简化，也保证了良好的渲染性能。")])]),t._v(" "),a("p",[a("img",{attrs:{src:v(366),alt:""}})]),t._v(" "),a("blockquote",[a("p",[t._v("也就是说，在泛 Web 容器时代，我们仍然采用前端友好的 JavaScript 进行开发，整体加载、渲染机制大大简化，并且由原生接管绘制，即将原生系统作为渲染的后端，为依托于 JavaScript 虚拟机的 JavaScript 代码提供所需要的 UI 控件的实体。这，也是现在绝大部分跨平台框架的思路，而 React Native 和 Weex 就是其中的佼佼者。")])]),t._v(" "),a("p",[a("strong",[t._v("总结起来其实就是利用 JS 来调用 Native 端的组件，从而实现相应的功能。")])]),t._v(" "),a("h5",{attrs:{id:"自绘引擎时代"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#自绘引擎时代"}},[t._v("#")]),t._v(" 自绘引擎时代")]),t._v(" "),a("blockquote",[a("p",[t._v("这一时期的代表 Flutter 则开辟了一种全新的思路，即从头到尾重写一套跨平台的 UI 框架，包括渲染逻辑，甚至是开发语言。")]),t._v(" "),a("ol",[a("li",[t._v("渲染引擎依靠跨平台的 "),a("code",[t._v("Skia 图形库")]),t._v("来实现，Skia 引擎会将使用 Dart 构建的抽象的视图结构数据加工成 GPU 数据，交由 OpenGL 最终提供给 GPU 渲染，至此完成渲染闭环，因此可以在最大程度上保证一款应用在不同平台、不同设备上的体验一致性。")]),t._v(" "),a("li",[t._v("而开发语言选用的是同时支持 JIT（Just-in-Time，即时编译）和 AOT（Ahead-of-Time，预编译）的 Dart，不仅保证了开发效率，更提升了执行效率（比使用 JavaScript 开发的泛 Web 容器方案要高得多）")])])]),t._v(" "),a("p",[a("code",[t._v("Flutter 是什么？它出现的动机是什么，解决了哪些痛点？相比其他跨平台技术，Flutter 的优势在哪里？")])]),t._v(" "),a("hr"),t._v(" "),a("h5",{attrs:{id:"flutter-出现的历史背景"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#flutter-出现的历史背景"}},[t._v("#")]),t._v(" Flutter 出现的历史背景")]),t._v(" "),a("p",[t._v("为不同的操作系统开发拥有相同功能的应用程序，开发人员只有两个选择：")]),t._v(" "),a("ol",[a("li",[t._v("使用原生开发语言（即 Java 和 Objective-C），针对不同平台分别进行开发。")]),t._v(" "),a("li",[t._v("使用跨平台解决方案，对不同平台进行统一开发。")])]),t._v(" "),a("p",[t._v("原生开发方式的体验最好，但研发效率和研发成本相对较高；而跨平台开发方式研发虽然效率高，但为了抹平多端平台差异，各类解决方案暴露的组件和 API 较原生开发相比少很多，因此研发体验和产品功能并不完美。")]),t._v(" "),a("p",[t._v("所以，最成功的跨平台开发方案其实是依托于浏览器控件的 Web。浏览器保证了 99% 的概率下 Web 的需求都是可以实现的，不需要业务将就“技术”。不过，Web 最大的问题在于它的性能和体验与原生开发存在肉眼可感知的差异，因此并不适用于对体验要求较高的场景。")]),t._v(" "),a("p",[t._v("对于用户体验更接近于原生的 React Native，对业务的支持能力却还不到浏览器的 5%，仅适用于中低复杂度的低交互类页面。面对稍微复杂一点儿的交互和动画需求，开发者都需要 case by case 地去 review，甚至还可能要通过原生代码去扩展才能实现。")]),t._v(" "),a("p",[a("strong",[t._v("带着这些问题，我们终于迎来了本次的主角——Flutter。")])]),t._v(" "),a("p",[a("img",{attrs:{src:v(367),alt:""}})]),t._v(" "),a("p",[t._v("Flutter 是构建 Google 物联网操作系统 Fuchsia 的 SDK，主打"),a("code",[t._v("跨平台、高保真、高性能")]),t._v("。开发者可以通过 Dart 语言开发 App，一套代码可以同时运行在 iOS 和 Android 平台。 Flutter 使用 Native 引擎渲染视图，并提供了丰富的组件和接口，这无疑为开发者和用户都提供了良好的体验。")]),t._v(" "),a("p",[t._v("那么，"),a("strong",[t._v("Flutter 是怎么完成组件渲染的呢")]),t._v("？")]),t._v(" "),a("p",[t._v("这需要从图像显示的基本原理说起。"),a("code",[t._v("在计算机系统中，图像的显示需要 CPU、GPU 和显示器一起配合完成：CPU 负责图像数据计算，GPU 负责图像数据渲染，而显示器则负责最终图像显示。")])]),t._v(" "),a("p",[t._v("随后视频控制器会以每秒 60 次的速度，从帧缓冲区读取帧数据交由显示器完成图像显示。")]),t._v(" "),a("p",[a("img",{attrs:{src:v(368),alt:""}})]),t._v(" "),a("p",[t._v("可以看到，Flutter 关注如何尽可能快地在两个硬件时钟的 VSync 信号之间计算并合成视图数据，然后通过 Skia 交给 GPU 渲染：UI 线程使用 Dart 来构建视图结构数据，这些数据会在 GPU 线程进行图层合成，随后交给 Skia 引擎加工成 GPU 数据，而这些数据会通过 OpenGL 最终提供给 GPU 渲染。")]),t._v(" "),a("h5",{attrs:{id:"skia-是什么"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#skia-是什么"}},[t._v("#")]),t._v(" Skia 是什么？")]),t._v(" "),a("p",[a("img",{attrs:{src:v(369),alt:""}})]),t._v(" "),a("p",[a("u",[t._v("Skia是一个开源的 2D 图形库，提供各种常用的API，并可在多种软硬件平台上运行。谷歌Chrome浏览器、Chrome OS、安卓、Flutter、火狐浏览器、火狐操作系统以及其它许多产品都使用它作为图形引擎。")])]),t._v(" "),a("p",[t._v("Skia "),a("code",[t._v("在图形转换、文字渲染、位图渲染方面都表现卓越")]),t._v("，并提供了开发者友好的 API。")]),t._v(" "),a("p",[t._v("因此，架构于 Skia 之上的 Flutter，也因此拥有了彻底的跨平台渲染能力。通过与 Skia 的深度定制及优化，Flutter 可以最大限度地抹平平台差异，提高渲染效率与性能。")]),t._v(" "),a("p",[t._v("底层渲染能力统一了，上层开发接口和功能体验也就随即统一了，开发者再也不用操心平台相关的渲染特性了。"),a("code",[t._v("也就是说，Skia 保证了同一套代码调用在 Android 和 iOS 平台上的渲染效果是完全一致的。")])]),t._v(" "),a("p",[t._v("同样的在界面渲染、绘制的过程中，Flutter也做了很多优化处理，提升合成、渲染效率。")]),t._v(" "),a("h5",{attrs:{id:"flutte的优势"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#flutte的优势"}},[t._v("#")]),t._v(" FLutte的优势")]),t._v(" "),a("ol",[a("li",[t._v("在所有的平台下，都可以保持同样UI样式，同样的业务逻辑。\n大多数跨平台框架中的UI呈现：")])]),t._v(" "),a("p",[a("img",{attrs:{src:v(370),alt:""}})]),t._v(" "),a("p",[t._v("而Flutter直接通过画在画布上")]),t._v(" "),a("p",[a("img",{attrs:{src:v(371),alt:""}})]),t._v(" "),a("ol",{attrs:{start:"2"}},[a("li",[t._v("减少开发所需的时间")])]),t._v(" "),a("ul",[a("li",[t._v("Flutter的热重载可以高效快速的看到改变，甚至保留应用状态")]),t._v(" "),a("li",[t._v("官方提供的各种现成的组件（"),a("a",{attrs:{href:"https://flutter.dev/docs/development/ui/widgets/material",target:"_blank",rel:"noopener noreferrer"}},[t._v("Material"),a("OutboundLink")],1),t._v("和"),a("a",{attrs:{href:"https://flutter.dev/docs/development/ui/widgets/cupertino",target:"_blank",rel:"noopener noreferrer"}},[t._v("Cupertino"),a("OutboundLink")],1),t._v("）")])]),t._v(" "),a("p",[a("img",{attrs:{src:v(372),alt:""}})]),t._v(" "),a("ol",{attrs:{start:"3"}},[a("li",[t._v("快速迭代上线")])]),t._v(" "),a("ul",[a("li",[t._v("不需要单独的是适配iOS、Android双端UI层面的")])]),t._v(" "),a("ol",{attrs:{start:"4"}},[a("li",[t._v("更接近native的性能表现")])]),t._v(" "),a("ul",[a("li",[t._v("Flutter不依赖任何中间代码，最终直接构建成机器码，提高了性能。")])]),t._v(" "),a("ol",{attrs:{start:"5"}},[a("li",[t._v("自定义、复杂动画的")])]),t._v(" "),a("ul",[a("li",[t._v("Flutter最大的优势之一就是可以定制你在屏幕上看到的任何东西，不管它有多复杂")])]),t._v(" "),a("ol",{attrs:{start:"6"}},[a("li",[t._v("自己的渲染引擎")])]),t._v(" "),a("ul",[a("li",[t._v("Flutter使用Skia将界面渲染到平台提供的画布上。（意味着不需调整，迁移到其他平台）")])]),t._v(" "),a("ol",{attrs:{start:"7"}},[a("li",[t._v("更方便调用native api")])]),t._v(" "),a("ul",[a("li",[t._v("获取GPS坐标、蓝牙通信、收集传感器数据、权限处理等。（未支持的也可通过platform channel）")])]),t._v(" "),a("ol",{attrs:{start:"8"}},[a("li",[t._v("更高的潜力")])]),t._v(" "),a("ul",[a("li",[t._v("iOS、Android、Web、Desktop...")])]),t._v(" "),a("hr"),t._v(" "),a("h5",{attrs:{id:"接下来是相爱相杀时间-我们来对比一下flutter和react-native-hippy-。"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#接下来是相爱相杀时间-我们来对比一下flutter和react-native-hippy-。"}},[t._v("#")]),t._v(" 接下来是相爱相杀时间，我们来对比一下Flutter和React Native(Hippy)。")]),t._v(" "),a("h5",{attrs:{id:"ui方面"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ui方面"}},[t._v("#")]),t._v(" UI方面")]),t._v(" "),a("p",[a("img",{attrs:{src:v(373),alt:""}})]),t._v(" "),a("ul",[a("li",[t._v("在新旧设备上也能保持一致")])]),t._v(" "),a("p",[t._v("android 5.1  vs android 8.1\n"),a("img",{attrs:{src:v(374),alt:""}}),a("img",{attrs:{src:v(375),alt:""}})]),t._v(" "),a("ul",[a("li",[t._v("Flutter动画效果")])]),t._v(" "),a("p",[a("img",{attrs:{src:v(376),alt:""}}),t._v(" "),a("img",{attrs:{src:v(377),alt:""}}),t._v(" "),a("img",{attrs:{src:v(378),alt:""}}),t._v(" "),a("img",{attrs:{src:v(379),alt:""}})]),t._v(" "),a("h5",{attrs:{id:"性能方面"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#性能方面"}},[t._v("#")]),t._v(" 性能方面")]),t._v(" "),a("ul",[a("li",[t._v("基于ListView的基准测试")])]),t._v(" "),a("p",[t._v("在listView中中，我们有1000个元素，并且到达列表最后一个元素的滚动时间相同，这里使用到了一些第三方库。")]),t._v(" "),a("ul",[a("li",[t._v("ios Nuke")]),t._v(" "),a("li",[t._v("Android Glide")]),t._v(" "),a("li",[t._v("react native React-native-fast-image")])]),t._v(" "),a("p",[a("img",{attrs:{src:v(380),alt:""}})]),t._v(" "),a("p",[t._v("结果")]),t._v(" "),a("p",[a("img",{attrs:{src:v(381),alt:""}}),t._v(" "),a("img",{attrs:{src:v(382),alt:""}})]),t._v(" "),a("h5",{attrs:{id:"flutter缺点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#flutter缺点"}},[t._v("#")]),t._v(" Flutter缺点")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("开发者社区的规模和第三方库")])]),t._v(" "),a("li",[a("p",[t._v("持续集成的能力")])]),t._v(" "),a("li",[a("p",[t._v("APK的大小")])]),t._v(" "),a("li",[a("p",[t._v("Dart语言学习成本")])]),t._v(" "),a("li",[a("p",[t._v("动态更新能力")])]),t._v(" "),a("li",[a("p",[t._v("flutter是什么，原理和架构是怎样的")]),t._v(" "),a("ul",[a("li",[t._v("拥有自绘引擎的跨平台开发框架")])])]),t._v(" "),a("li",[a("p",[t._v("flutter和react-native(hippy)有什么区别，为什么用flutter，不用react-native(hippy)")]),t._v(" "),a("ul",[a("li",[t._v("开发效率更高，减少客户端开发时间")]),t._v(" "),a("li",[t._v("性能更优异")]),t._v(" "),a("li",[t._v("UI、动画支持更全面")]),t._v(" "),a("li",[t._v("更接近native")])])]),t._v(" "),a("li",[a("p",[t._v("flutter和react-native(hippy)在方案选型上的一些差异（比如自定义UI组件性能差异，接口怎么通信）")]),t._v(" "),a("ul",[a("li",[t._v("自定义UI组件platformview性能有待提升")]),t._v(" "),a("li",[t._v("接口通信，hippy与客户端通过jsbridge，flutter通过methodchannel")])])]),t._v(" "),a("li",[a("p",[t._v("flutter混合栈的实现(flutter boost)")])])]),t._v(" "),a("p",[a("img",{attrs:{src:v(383),alt:""}})]),t._v(" "),a("ol",{attrs:{start:"5"}},[a("li",[a("p",[t._v("flutter为什么不支持动态更新（或者说我们为什么暂时不支持动态更新）")]),t._v(" "),a("ul",[a("li",[t._v("初期考虑应用安全和苹果策略，所以不支持动态更新")]),t._v(" "),a("li",[t._v("目前Android端可以通过整包方式实现动态更新， iOS 目前还不支持。")]),t._v(" "),a("li",[t._v("QQ团队MXFlutter")])])]),t._v(" "),a("li",[a("p",[t._v("flutter代码多端复用（包括web，转web，转小程序）")]),t._v(" "),a("ul",[a("li",[t._v("flutter目前官方支持发布为web应用的能力")]),t._v(" "),a("li",[t._v("京东flutter_mp，PCG flutter转手Q小程序")])])]),t._v(" "),a("li",[a("p",[t._v("flutter的页面怎么请求后台（dartjce 类似wnsbuffer）")]),t._v(" "),a("ul",[a("li",[t._v("dartjce，在flutter端进行打解包")])])]),t._v(" "),a("li",[a("p",[t._v("flutter动画能力（lottie? canvas? 序列帧?）")]),t._v(" "),a("ul",[a("li",[t._v("lottie - flutter_lottie、fluttie")]),t._v(" "),a("li",[t._v("canvas - CustomPainter（官方组件）")]),t._v(" "),a("li",[t._v("序列帧动画 - （官方animation组件）https://verygood.ventures/blog/2020/2/25/a-deep-dive-into-the-flutter-animations-package")])])])])])}),[],!1,null,null,null);e.default=r.exports}}]);